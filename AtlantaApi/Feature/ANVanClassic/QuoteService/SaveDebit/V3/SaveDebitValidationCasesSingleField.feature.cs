// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AtlantaApi.Feature.ANVanClassic.QuoteService.SaveDebit.V3
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Xunit.TraitAttribute("Category", "AutonetVan")]
    public partial class ValidateSaveDebitSingleFieldFeature : object, Xunit.IClassFixture<ValidateSaveDebitSingleFieldFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = new string[] {
                "AutonetVan"};
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "SaveDebitValidationCasesSingleField.feature"
#line hidden
        
        public ValidateSaveDebitSingleFieldFeature(ValidateSaveDebitSingleFieldFeature.FixtureData fixtureData, AtlantaApi_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Feature/ANVanClassic/QuoteService/SaveDebit/V3", "Validate Save Debit Single Field", null, ProgrammingLanguage.CSharp, new string[] {
                        "AutonetVan"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Validate Save Debit request with single fields")]
        [Xunit.TraitAttribute("FeatureTitle", "Validate Save Debit Single Field")]
        [Xunit.TraitAttribute("Description", "Validate Save Debit request with single fields")]
        [Xunit.TraitAttribute("Category", "QuoteServices")]
        [Xunit.InlineDataAttribute("Debit", "SessionId", "null", "400", "false", "SessionId is required.", new string[0])]
        [Xunit.InlineDataAttribute("Debit", "SessionId", "54c484ac-303e-4119-ade3-7b83d026725a1232323vvvvvvvvvvvvvvvvvvv", "400", "false", "SessionId is invalid.", new string[0])]
        [Xunit.InlineDataAttribute("Debit", "AccountName", "null", "200", "true", "Save data successfully", new string[0])]
        [Xunit.InlineDataAttribute("Debit", "AccountName", "Accountname54c484ac-303e-4119-ade3-7b83d026725a1232323vvvvvvvvvvvvvvvvvvvddd 4354" +
            "654365746587698796800", "400", "false", "AccountName cannot be over 100 characters.", new string[0])]
        [Xunit.InlineDataAttribute("Debit", "AccountName", "Accountname54c484ac-303e-4119-ade3-7b83d026725a1232323vvvvvvvvvvvvvvvvvvvddd 4354" +
            "6543657465876987968", "200", "true", "Save data successfully", new string[0])]
        [Xunit.InlineDataAttribute("Debit", "AccountNumber", "null", "200", "true", "Save data successfully", new string[0])]
        [Xunit.InlineDataAttribute("Debit", "AccountNumber", "Accountname54c484ac-303e-4119-ade3-7b83d026725a1232323vvvvvvvvvvvvvvvvvvvddd 4354" +
            "654365746587698796800", "400", "false", "AccountNumber cannot be over 100 characters.", new string[0])]
        [Xunit.InlineDataAttribute("Debit", "AccountNumber", "13537846", "200", "true", "Save data successfully", new string[0])]
        [Xunit.InlineDataAttribute("Debit", "SortCode", "null", "200", "true", "Save data successfully", new string[0])]
        [Xunit.InlineDataAttribute("Debit", "SortCode", "54c484ac-303e-4119-ade3-7b83d026725a1232323vvvvvvvvvvvvvvvvvvvddd 435465436574658" +
            "7698796800hhjjvjhhjgvjhmcghcgcg", "400", "false", "SortCode cannot be over 100 characters. SortCode is invalid.", new string[0])]
        [Xunit.InlineDataAttribute("Debit", "SortCode", "43-54-65-43-65-74-65-87-69-87-96-80-43-54-65-43-65-74-65-87-69-87-96-80-43-54-65-" +
            "43-65-74-65-87-69-8", "400", "false", "SortCode is invalid.", new string[0])]
        [Xunit.InlineDataAttribute("Debit", "SortCode", "20-51-32", "200", "true", "Save data successfully", new string[0])]
        [Xunit.InlineDataAttribute("Debit", "Card", "null", "200", "true", "Save data successfully", new string[0])]
        [Xunit.InlineDataAttribute("Debit", "Card", "POLHDEC", "200", "true", "Save data successfully", new string[0])]
        [Xunit.InlineDataAttribute("Debit", "Email", "null", "200", "true", "Save data successfully", new string[0])]
        [Xunit.InlineDataAttribute("Debit", "Email", "jordan   .knottautonetinsurance.co.uk", "400", "false", "Email is invalid.", new string[0])]
        [Xunit.InlineDataAttribute("Debit", "Email", "jordan.knott@autonetinsurance.co.uk", "200", "true", "Save data successfully", new string[0])]
        public virtual void ValidateSaveDebitRequestWithSingleFields(string level1, string level2, string value, string statusCode, string isSuccess, string messages, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "QuoteServices"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Level1", level1);
            argumentsOfScenario.Add("Level2", level2);
            argumentsOfScenario.Add("Value", value);
            argumentsOfScenario.Add("StatusCode", statusCode);
            argumentsOfScenario.Add("IsSuccess", isSuccess);
            argumentsOfScenario.Add("Messages", messages);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate Save Debit request with single fields", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 9
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                            "Property",
                            "Value"});
                table81.AddRow(new string[] {
                            "SaveDebitRequestBody",
                            "SaveDebitRequestBodyAutonetVan.json"});
                table81.AddRow(new string[] {
                            "QuoteRequestBody",
                            "ValidQuoteAutonetVanSuccess.json"});
                table81.AddRow(new string[] {
                            "ApiVersion",
                            "V3"});
                table81.AddRow(new string[] {
                            "ContextName",
                            "AutonetVan"});
#line 10
 testRunner.Given("User has Save Debit body", ((string)(null)), table81, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                            "Level2",
                            "Value"});
                table82.AddRow(new string[] {
                            string.Format("{0}", level2),
                            string.Format("{0}", value)});
#line 16
 testRunner.When("User send Save Debit request", ((string)(null)), table82, "When ");
#line hidden
#line 19
 testRunner.Then(string.Format("Save Debit response returns {0} and {1} and {2}", statusCode, isSuccess, messages), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                ValidateSaveDebitSingleFieldFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                ValidateSaveDebitSingleFieldFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
